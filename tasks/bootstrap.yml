---
  - name: (Check) Vault status
    hashivault_status:
    register: vault_status

  - block:

    - name: (Bootstrap) Init Vault
      hashivault_init:
      register: vault_init

    - name: (Bootstrap) Extract creds from inited Vault
      set_fact:
        creds:
          keys: "{{ vault_init['keys'] }}"
          keys_base_64: "{{ vault_init.keys_base64 }}"
          root_token: "{{ vault_init.root_token }}"

    - name: "(Bootstrap) Dump token and keys to file {{ infraunlimited_vault_bootstrap_root_creds_dest }}. Please move it to safe place!"
      no_log: true
      copy:
        content: "{{ creds | to_nice_yaml }}"
        dest: "{{ infraunlimited_vault_bootstrap_root_creds_dest }}"
        mode: '0600'

    when: not vault_status.status.initialized

  - block:

    - name: (Bootstrap) Load creds
      include_vars:
        file: "{{ infraunlimited_vault_bootstrap_root_creds_dest }}"
        name: creds

    - name: (Bootstrap) Unseal Vault
      hashivault_unseal:
        keys: "{{ creds['keys'] | join(' ') }}"

    when: vault_status.status.sealed

  - block:

    - name: (Bootstrap) Load root creds
      include_vars:
        file: "{{ infraunlimited_vault_bootstrap_root_creds_dest }}"
        name: creds

    - name: (Bootstrap) Enable userpass auth
      hashivault_auth_method:
        authtype: token
        method_type: userpass
        token: "{{ creds['root_token'] }}"
        config: "{{ infraunlimited_vault_bootstrap_userpass_config }}"

    - name: (Bootstrap) Create Admin policy
      hashivault_policy:
        name: administrator
        state: present
        rules_file: "{{ infraunlimited_vault_bootstrap_admin_policy_file }}"
        authtype: token
        token: "{{ creds['root_token'] }}"

    - name: (Bootstrap) Create Admin user
      no_log: true
      hashivault_userpass:
        name: "{{ infraunlimited_vault_bootstrap_admin_name }}"
        authtype: token
        pass: "{{ infraunlimited_vault_bootstrap_admin_password }}"
        policies: 'administrator'
        token: "{{ creds['root_token'] }}"

    - name: (Bootstrap) Genereate Admin user credentials dict
      no_log: true
      set_fact:
        admin_creds:
          url: "{{ lookup('env','VAULT_ADDR') }}"
          user: "{{ infraunlimited_vault_bootstrap_admin_name }}"
          password: "{{ infraunlimited_vault_bootstrap_admin_password }}"

    - name: "(Bootstrap) Render Admin user creds file to {{ infraunlimited_vault_bootstrap_admin_creds_file_dest }}"
      no_log: true
      copy:
        content: "{{ admin_creds | to_nice_yaml }}"
        dest: "{{ infraunlimited_vault_bootstrap_admin_creds_file_dest }}"
        mode: '0600'
    when:
      - infraunlimited_vault_bootstrap_create_admin
      - not vault_status.status.initialized
