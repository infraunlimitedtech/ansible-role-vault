---
  - set_fact:
      creds_file: "{{ infraunlimited_vault_creds_file }}"

  - name: (Check) Vault status
    hashivault_status:
      url: "{{ lookup('env','VAULT_ADDR') }}"
    register: 'vault_status'

  - block:

    - name: Init Vault
      hashivault_init:
      register: 'vault_init'

    - set_fact:
        creds: 
          keys: "{{ vault_init['keys'] }}"
          keys_base_64: "{{ vault_init.keys_base64 }}"
          root_token: "{{ vault_init.root_token }}"

    - name: "Dump token and keys to file {{ creds_file }}. Please move it to safe place!"
      copy:
        content: "{{ creds | to_nice_yaml }}"
        dest: "{{ creds_file }}"
    when: vault_status.status.initialized == false

  - block:

    - name: load creds
      include_vars:
        file: "{{ creds_file }}"
        name: creds

    - name: unseal Vault
      hashivault_unseal:
        keys: "{{ creds['keys'] | join(' ') }}"

    when: vault_status.status.sealed

  - block:

    - name: Load creds
      include_vars:
        file: "{{ creds_file }}"
        name: creds

    - name: Enable userpass auth
      hashivault_auth_method:
        authtype: token
        method_type: userpass
        token: "{{ creds['root_token'] }}"
        config:
          max_lease_ttl: 3600
          default_lease_ttl: 3600

    - name: Create Admin Policy
      hashivault_policy_set_from_file:
        authtype: token
        name: administrator
        rules_file: "{{ infraunlimited_vault_admin_policy_file }}"
        token: "{{ creds['root_token'] }}"

    - name: Create Admin user
      hashivault_userpass:
        url: "{{ lookup('env','VAULT_ADDR') }}"
        name: "{{ infraunlimited_vault_admin_name }}"
        authtype: token
        pass_update: yes
        pass: "{{ infraunlimited_vault_admin_password }}"
        policies: 'administrator'
        token: "{{ creds['root_token'] }}"

    - set_fact:
        admin_creds:
          url: "{{ lookup('env','VAULT_ADDR') }}"
          user: "{{ infraunlimited_vault_admin_name }}"
          password: "{{ infraunlimited_vault_admin_password }}"

    - name: (Bootstrap) Create admin user creds file
      copy:
        content: "{{ admin_creds | to_nice_yaml }}"
        dest: "{{ infraunlimited_vault_admin_creds_file }}"

    when: vault_status.status.initialized == false
